# This config was automatically generated from your source code
# Stacks detected: deps:java:api-server,deps:node:api-stub-server,tool:gradle:
version: 2.1
jobs:
  test-java:
    docker:
      - image: cimg/openjdk:17.0
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
          POSTGRES_INIT_DB_ARGS: --encoding=UTF-8
    environment:
        SPRING_APPLICATION_NAME: api-server
        SPRING_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/postgres
        SPRING_TEST_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/postgres
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: password
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
        FIREBASE_CREDENTIALS_JSON: $FIREBASE_CREDENTIALS_JSON
        FILTER_FIREBASE_AUTHENTICATION_ENABLED: false
    working_directory: ~/project/api-server
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew check
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-java
    # - deploy:
    #     requires:
    #       - test-java
